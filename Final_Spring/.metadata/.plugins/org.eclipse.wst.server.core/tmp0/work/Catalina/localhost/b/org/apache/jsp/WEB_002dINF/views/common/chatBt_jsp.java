/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.35
 * Generated at: 2019-02-21 10:43:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.common;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class chatBt_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1547454760680L));
    _jspx_dependants.put("jar:file:/C:/Users/kgitbank/Documents/Project-Spring/Final_Spring/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/sdasdsa/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html class=\"chatHtml\">\r\n");
      out.write("<head>\r\n");
      out.write("<title></title>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../resources/css/chat.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("\t.circle {\r\n");
      out.write("\t\tbackground-color: yellow;\r\n");
      out.write("\t\tcolor: #534737;\r\n");
      out.write("\t\theight: 6em;\r\n");
      out.write("\t\twidth: 6em;\r\n");
      out.write("\t\tborder-radius: 7.5em;\r\n");
      out.write("\t\t-webkit-border-radius: 7.5em;\r\n");
      out.write("\t\t-moz-border-radiud: 7.5e,;\r\n");
      out.write("\t\ttext-align: center;\r\n");
      out.write("\t\tbox-shadow: 1px 10px 5px rgba(0,0,0,0.2), 6px 11px 5px rgba(0,0,0,0.2);\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t.chatBt {\r\n");
      out.write("\t\tborder: 0;\r\n");
      out.write("\t\toutline: 0;\r\n");
      out.write("\t\tcursor: pointer;\r\n");
      out.write("\t}\r\n");
      out.write("\t.chatBt:focus {\r\n");
      out.write("\t\toutline: none;\r\n");
      out.write("\t}\r\n");
      out.write("\t.chatView:after {\r\n");
      out.write("\t    content: '';\r\n");
      out.write("\t    position: absolute;\r\n");
      out.write("\t    border-top: 20px solid ;\r\n");
      out.write("\t    border-right: 20px solid transparent;\r\n");
      out.write("\t    border-left: 20px solid transparent;\r\n");
      out.write("\t    bottom: -20px;\r\n");
      out.write("\t\tright: 10px;\r\n");
      out.write("\t}\r\n");
      out.write("\t.circle{\r\n");
      out.write("\t\ttransition: color 0.3s, background 0.3s, transform 0.5s ease-in-out;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.circle:hover {\r\n");
      out.write("\t  color: white;\r\n");
      out.write("\t  background: #523737;\r\n");
      out.write("\t  transform: rotateY(1turn);\r\n");
      out.write("\t}\r\n");
      out.write("</style>\r\n");
      out.write("<body style=\"height: 100%;\">\r\n");
      out.write("\t<div class=\"chatView\" style=\"display: none; position: fixed; height:50%; width:348px; bottom:120px;right:30px; background-color: white; border: 1px solid; box-shadow: 1px 10px 5px rgba(0,0,0,0.2), 6px 11px 5px rgba(0,0,0,0.2);\">\r\n");
      out.write("\t\t<iframe id=\"chatPage\" style=\"overflow-x:hidden; width: 100%; height: 100%;\"></iframe>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<button class=\"chatBt circle\"  style=\"position: fixed; width:66px; height:66px; bottom: 30px; right: 30px;\"><i class=\"fas fa-comment\"></i></button>\r\n");
      out.write("\t\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\r\n");
      out.write("\twindow.onpageshow = function(event) {\r\n");
      out.write("\t    if ( event.persisted || (window.performance && window.performance.navigation.type == 2)) {\r\n");
      out.write("\t    \twindow.location.reload();\r\n");
      out.write("\t    }\r\n");
      out.write("\t}\r\n");
      out.write("\t\t$('.chatBt').click(function () {\r\n");
      out.write("\t\t\tvar login = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.dto.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\t\t\tif(login == \"\" || login == null) {\r\n");
      out.write("\t\t\t\tswal('로그인 필요','채팅을 이용하기 위해서는 로그인을 해주세요.','error');\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif($('.chatView').is(':visible')) {\r\n");
      out.write("\t\t\t\t$('.chatView').hide(300);\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\t$('.chatView').show(300);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(document).ready(function () {\r\n");
      out.write("\t\t\tvar iframe = document.getElementById(\"chatPage\");\r\n");
      out.write("\t\t\tvar login = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.dto.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar chatPage = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cookie.chatPage.value}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\t\t\tif(chatPage == null || chatPage == \"\") {\r\n");
      out.write("\t\t\t\tiframe.contentWindow.location.replace(\"../chat/friend.do\");\r\n");
      out.write("\t\t\t\t//$('#chatPage').attr('src', '../chat/friend.do');\r\n");
      out.write("\t\t\t\t$('.chatView').hide();\r\n");
      out.write("\t\t\t} else if (chatPage ==1) {\r\n");
      out.write("\t\t\t\tiframe.contentWindow.location.replace(\"../chat/friend.do\");\r\n");
      out.write("\t\t\t\t//$('#chatPage').attr('src', '../chat/friend.do');\r\n");
      out.write("\t\t\t\t$('.chatView').show();\r\n");
      out.write("\t\t\t} else if (chatPage == 2) {\r\n");
      out.write("\t\t\t\tiframe.contentWindow.location.replace(\"../chat/chats.do\");\r\n");
      out.write("\t\t\t\t//$('#chatPage').attr('src', '../chat/chats.do');\r\n");
      out.write("\t\t\t\t$('.chatView').show();\r\n");
      out.write("\t\t\t} else if (chatPage == 3) {\r\n");
      out.write("\t\t\t\tvar chatOpponent = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cookie.chatOpponent.value}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\t\t\t\tiframe.contentWindow.location.replace('../chat/chat.do?opponent='+chatOpponent);\r\n");
      out.write("\t\t\t\t//$('#chatPage').attr('src', '../chat/chat.do?opponent='+chatOpponent);\r\n");
      out.write("\t\t\t\t$('.chatView').show();\r\n");
      out.write("\t\t\t} else if (chatPage == 4) {\r\n");
      out.write("\t\t\t\tiframe.contentWindow.location.replace('../chat/find.do?');\r\n");
      out.write("\t\t\t\t//$('#chatPage').attr('src', '../chat/find.do');\r\n");
      out.write("\t\t\t\t$('.chatView').show();\r\n");
      out.write("\t\t\t} else if (chatPage == 5) {\r\n");
      out.write("\t\t\t\tiframe.contentWindow.location.replace('../chat/profile.do?');\r\n");
      out.write("\t\t\t\t//$('#chatPage').attr('src', '../chat/profile.do');\r\n");
      out.write("\t\t\t\t$('.chatView').show();\r\n");
      out.write("\t\t\t} else if (chatPage == 6) {\r\n");
      out.write("\t\t\t\tiframe.contentWindow.location.replace('../chat/more.do?');\r\n");
      out.write("\t\t\t\t//$('#chatPage').attr('src', '../chat/more.do');\r\n");
      out.write("\t\t\t\t$('.chatView').show();\r\n");
      out.write("\t\t\t}\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(login == \"\" || login == null) {\r\n");
      out.write("\t\t\t\t$('.chatView').hide();\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t</script> \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
