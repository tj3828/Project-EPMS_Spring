package com.hb.chat;

import javax.inject.Singleton;
import javax.servlet.http.HttpSession;
import javax.websocket.HandshakeResponse;
import javax.websocket.server.HandshakeRequest;
import javax.websocket.server.ServerEndpointConfig;

import com.google.inject.AbstractModule;
import com.google.inject.Guice;
import com.google.inject.Injector;
import com.google.inject.assistedinject.FactoryModuleBuilder;


public class HttpSessionConfigurator extends ServerEndpointConfig.Configurator {

	private static Injector injector = Guice.createInjector(new AbstractModule() {
		
		@Override
		protected void configure() {
			
			install(new FactoryModuleBuilder().build(IChatDAOMapper.class));
			bind(IChatDAOMapper.class).to(IChatDAOMapper.class);
			bind(IChatService.class).to(ChatServiceImpl.class);
			
		}
		
		
	});
	
    @Override
	public <T> T getEndpointInstance(Class<T> endpointClass) throws InstantiationException {
    	 return injector.getInstance(endpointClass);
	}

	@Override
    public void modifyHandshake(ServerEndpointConfig sec, HandshakeRequest request, HandshakeResponse response) {
        System.out.println("modifyHandshake() Current thread " + Thread.currentThread().getName());
        sec.getUserProperties().put("http", request.getHttpSession()); 
        System.out.println("modifyHandshake() User " + "http" + " with http session ID " + ((HttpSession) request.getHttpSession()).getId());
    }

}