package com.hb.chat.config;

import org.springframework.beans.BeansException; 
import org.springframework.beans.factory.BeanFactory; 
import org.springframework.context.ApplicationContext; 
import org.springframework.context.ApplicationContextAware;
import org.springframework.stereotype.Component;

import javax.servlet.http.HttpSession;
import javax.websocket.HandshakeResponse;
import javax.websocket.server.HandshakeRequest;
import javax.websocket.server.ServerEndpointConfig; 

@Component
public class CustomSpringConfigurator extends ServerEndpointConfig.Configurator implements ApplicationContextAware { 
	/** * Spring application context. */ 
	private static volatile BeanFactory context; 
	
	@Override 
	public <T> T getEndpointInstance(Class<T> clazz) 
			throws InstantiationException { 
		return context.getBean(clazz); 
	} 
	@Override 
	public void setApplicationContext(ApplicationContext applicationContext) throws BeansException { 
		CustomSpringConfigurator.context = applicationContext; 
	}
	@Override
	public void modifyHandshake(ServerEndpointConfig sec, HandshakeRequest request, HandshakeResponse response) {
		System.out.println("modifyHandshake() Current thread " + Thread.currentThread().getName());
        sec.getUserProperties().put("http", request.getHttpSession()); 
        System.out.println("modifyHandshake() User " + "http" + " with http session ID " + ((HttpSession) request.getHttpSession()).getId());
	}
	
	
} 