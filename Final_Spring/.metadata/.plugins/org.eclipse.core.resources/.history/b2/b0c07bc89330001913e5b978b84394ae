package com.hb.freeboard;

import java.util.List;

import javax.inject.Inject;
import javax.servlet.annotation.MultipartConfig;
import javax.validation.Valid;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.MethodArgumentNotValidException;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.hb.freeboard.reply.IFreeBoardReplyService;

import common.Paging;

@Controller
@RequestMapping(value="/freeboard",method= {RequestMethod.GET,RequestMethod.POST},produces="application/json; charset=utf-8")
public class FreeBoardController {
	
	@Inject
	IFreeBoardService freeboardservice;
	@Inject
	IFreeBoardReplyService replyservice;
	
	@GetMapping("/freeboard.do")
	public String showFreeboardPage(Model model,Paging paging) {
		List<FreeBoardVO> list = freeboardservice.board_list(paging);
		model.addAttribute("list", list);
		return "/freeboard/freeboard";
	}
	
	@ResponseBody
	@PostMapping(value="/write.do")
	public void write(@RequestPart("serialData") @Valid FreeBoardVO dto, @RequestPart("file") MultipartFile file){
		freeboardservice.board_write(dto);
	}
	
	
	// Reply ===================================================
	
	@ExceptionHandler(MethodArgumentNotValidException.class)
	public ResponseEntity<String> handlerException(MethodArgumentNotValidException ex){
		System.out.println("exeception 호풀");
		String errorCode = ex.getBindingResult().getAllErrors().get(0).getDefaultMessage();
		return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(errorCode);
	}
	
}
